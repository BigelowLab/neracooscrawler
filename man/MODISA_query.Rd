% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/modisa.R, R/query.R
\name{MODISA_query}
\alias{MODISA_query}
\title{A basic MODISA query function to retrieve one or more datasets}
\usage{

  MODISA_query(top = "http://www.neracoos.org/thredds/catalog/GMRI/SATELLITE/NASA/MODISA_NESHELF/catalog.xml",
  platform = "MODISA", product = "L3SMI",
  year = format(as.Date(Sys.Date()), "\%Y"),
  day = format(as.Date(Sys.Date()), "\%j"), what = c("all", "most_recent",
  "within", "before", "after")[1], date_filter = NULL, greplargs = NULL,
  verbose = FALSE)


  MODISA_query(top = "http://www.neracoos.org/thredds/catalog/GMRI/SATELLITE/NASA/MODISA_NESHELF/catalog.xml",
  platform = "MODISA", product = "L3SMI",
  year = format(as.Date(Sys.Date()), "\%Y"),
  day = format(as.Date(Sys.Date()), "\%j"), what = c("all", "most_recent",
  "within", "before", "after")[1], date_filter = NULL, greplargs = NULL,
  verbose = FALSE)


  MODISA_query(top = "http://www.neracoos.org/thredds/catalog/GMRI/SATELLITE/NASA/MODISA_NESHELF/catalog.xml",
  platform = "MODISA", product = "L3SMI",
  year = format(as.Date(Sys.Date()), "\%Y"),
  day = format(as.Date(Sys.Date()), "\%j"), what = c("all", "most_recent",
  "within", "before", "after")[1], date_filter = NULL, greplargs = NULL,
  verbose = FALSE)
}
\arguments{
\item{top}{character, uri of the top catalog}

\item{platform}{character, the name of the platform (MODISA)}

\item{product}{character, the product type (L3SMI)}

\item{year}{character or numeric, four digit year(s) - ignored if what is not 'all'}

\item{day}{character or numeric, three digit year of day(s) - ignored if what is not 'all'.
You can improve efficiency by preselecting days for months, days, or seasons.}

\item{what}{character, optional filters
\itemize{
    \item{all - return all occurences, the default, used with year and day, date_filter = NULL}
    \item{most_recent - return only the most recent, date_filter = NULL}
    \item{within - return the occurrences bounded by date_filter first and secomd elements}
    \item{before - return the occurences prior to the first date_filter element}
    \item{after - return the occurrences after the first date_filter element}
 }}

\item{date_filter}{POSIXct or Date, one or two element vector populated according to
the \code{what} parameter.  By default NULL.  It is an error to not match
the value of date_filter}

\item{greplargs}{list or NULL, if a list the provide two elements,
pattern=character and fixed=logical, which are arguments for \code{grepl} If fixed is FALSE
then be sure to provide a regex for the pattern value.}

\item{verbose}{logical, by default FALSE}

\item{top}{character, uri of the top catalog}

\item{platform}{character, the name of the platform (MODISA)}

\item{product}{character, the product type (L3SMI)}

\item{year}{character or numeric, four digit year(s) - ignored if what is not 'all'}

\item{day}{character or numeric, three digit year of day(s) - ignored if what is not 'all'.
You can improve efficiency by preselecting days for months, days, or seasons.}

\item{what}{character, optional filters
\itemize{
    \item{all - return all occurences, the default, used with year and day, date_filter = NULL}
    \item{most_recent - return only the most recent, date_filter = NULL}
    \item{within - return the occurrences bounded by date_filter first and secomd elements}
    \item{before - return the occurences prior to the first date_filter element}
    \item{after - return the occurrences after the first date_filter element}
 }}

\item{date_filter}{POSIXct or Date, one or two element vector populated according to
the \code{what} parameter.  By default NULL.  It is an error to not match
the value of date_filter}

\item{greplargs}{list or NULL, if a list the provide two elements,
pattern=character and fixed=logical, which are arguments for \code{grepl} If fixed is FALSE
then be sure to provide a regex for the pattern value.}

\item{verbose}{logical, by default FALSE}

\item{top}{character, uri of the top catalog}

\item{platform}{character, the name of the platform (MODISA)}

\item{product}{character, the product type (L3SMI)}

\item{year}{character or numeric, four digit year(s) - ignored if what is not 'all'}

\item{day}{character or numeric, three digit year of day(s) - ignored if what is not 'all'.
You can improve efficiency by preselecting days for months, days, or seasons.}

\item{what}{character, optional filters
\itemize{
    \item{all - return all occurences, the default, used with year and day, date_filter = NULL}
    \item{most_recent - return only the most recent, date_filter = NULL}
    \item{within - return the occurrences bounded by date_filter first and secomd elements}
    \item{before - return the occurences prior to the first date_filter element}
    \item{after - return the occurrences after the first date_filter element}
 }}

\item{date_filter}{POSIXct or Date, one or two element vector populated according to
the \code{what} parameter.  By default NULL.  It is an error to not match
the value of date_filter}

\item{greplargs}{list or NULL, if a list the provide two elements,
pattern=character and fixed=logical, which are arguments for \code{grepl} If fixed is FALSE
then be sure to provide a regex for the pattern value.}

\item{verbose}{logical, by default FALSE}
}
\value{
list of DatasetRefClass or NULL

list of DatasetRefClass or NULL

list of DatasetRefClass or NULL
}
\description{
A basic MODISA query function to retrieve one or more datasets

A basic MODISA query function to retrieve one or more datasets

A basic MURSST query function to retrieve one or more datasets
}
\examples{
\dontrun{
      query <- MODISA_query(
         what = 'most_recent',
         greplargs = list(pattern='8D_CHL_chlor_a_4km', fixed = TRUE))
      query <- MODISA_query(
         what = 'within',
         date_filter = as.POSIXct(c("2008-01-01", "2008-06-01"), format = "\%Y-\%m-\%d"),
         greplargs = list(
            chl = list(pattern='8D_CHL_chlor_a_4km', fixed = TRUE),
            sst = list(pattern='8D_SST_sst_4km', fixed = TRUE)) )
   }
\dontrun{
      query <- MODISA_query(
         what = 'most_recent',
         greplargs = list(pattern='8D_CHL_chlor_a_4km', fixed = TRUE))
      query <- MODISA_query(
         what = 'within',
         date_filter = as.POSIXct(c("2008-01-01", "2008-06-01"), format = "\%Y-\%m-\%d"),
         greplargs = list(
            chl = list(pattern='8D_CHL_chlor_a_4km', fixed = TRUE),
            sst = list(pattern='8D_SST_sst_4km', fixed = TRUE)) )
   }
\dontrun{
      query <- MODISA_query(
         what = 'most_recent',
         greplargs = list(pattern='8D_CHL_chlor_a_4km', fixed = TRUE))
      query <- MODISA_query(
         what = 'within',
         date_filter = as.POSIXct(c("2008-01-01", "2008-06-01"), format = "\%Y-\%m-\%d"),
         greplargs = list(
            chl = list(pattern='8D_CHL_chlor_a_4km', fixed = TRUE),
            sst = list(pattern='8D_SST_sst_4km', fixed = TRUE)) )
   }
}
\seealso{
\code{\link{get_monthdays}}, \code{\link{get_8days}} and \code{\link{get_seasondays}}

\code{\link{get_monthdays}}, \code{\link{get_8days}} and \code{\link{get_seasondays}}

\code{\link{get_monthdays}}, \code{\link{get_8days}} and \code{\link{get_seasondays}}
}

